name: Publish Packages

on:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'docker/**'
  #     - 'gradle/**'
  #     - 'maven/**'
  #     - 'npm/**'
  #     - 'nuget/**'
  #     - 'ruby/**'
  pull_request:
    branches:
      - main
    paths:
      - 'docker/**'
      - 'gradle/**'
      - 'maven/**'
      - 'npm/**'
      - 'nuget/**'
      - 'ruby/**'

permissions:
  contents: read
  packages: write

jobs:
  changed-files:
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.changed_files.outputs.files }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: List changed files
        id: changed_files
        run: |
          git diff --name-only origin/main > changed_files.txt
          {
            echo 'files<<EOF'
            cat changed_files.txt
            echo EOF
          } >> "$GITHUB_OUTPUT"
        shell: bash
  publish-container:
    needs: changed-files
    if: contains(needs.changed-files.outputs.files, 'docker/')
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Publish to GitHub Packages
        # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: ./docker
          file: docker/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
  # publish-gradle:
  #   needs: changed-files
  #   if: contains(needs.changed-files.outputs.files, 'gradle/')
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Publish to GitHub Packages
  #       if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #       uses: burrunan/gradle-cache-action@v1
  #       with:
  #         arguments: publish
  #         gradle-version: 6.8.3
  #         publish-maven-central: false
  #         publish-sonatype: false
  #         publish-gradle-plugin-portal: false
  #         publish-github-packages: true
  # publish-maven:
  #   needs: changed-files
  #   if: contains(needs.changed-files.outputs.files, 'maven/')
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Publish to GitHub Packages
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: 'zulu'
  #         java-version: '11'
  #     - name: Publish to GitHub Packages
  #       if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #       run: cd maven && mvn deploy -B -DskipTests -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish-npm:
    needs: changed-files
    if: contains(needs.changed-files.outputs.files, 'npm/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Publish to GitHub Packages
        uses: actions/setup-node@v4
        with:
          registry-url: https://npm.pkg.github.com
      - name: Publish to GitHub Packages
        # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: cd npm && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish-nuget:
    needs: changed-files
    # if: contains(needs.changed-files.outputs.files, 'nuget/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Publish to GitHub Packages
        uses: nuget/setup-nuget@v2
      - name: Publish to GitHub Packages
        run: |
          cd nuget
          dotnet pack -c Release
          nuget push bin/Release/*.nupkg -Source https://nuget.pkg.github.com/${{ github.repository_owner }}/${{ github.event.repository.name }} -ApiKey ${{ secrets.GITHUB_TOKEN }}
  # publish-ruby:
  #   needs: changed-files
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Publish to GitHub Packages
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         bundler-cache: true
  #     - name: Publish to GitHub Packages
  #       if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #       run: cd ruby && gem build *.gemspec && gem push *.gem --key github --host https://rubygems.pkg.github.com/${{ github.repository_owner }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
