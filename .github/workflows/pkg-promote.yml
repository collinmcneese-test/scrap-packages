# GitHub Action to publish packages to GitHub Packages
# Publishes packages for the following directories:
# - docker
# - gradle
# - maven
# - npm
# - nuget
# - ruby

name: Publish Packages

on:
  push:
    branches:
      - main
    paths:
      - 'docker/**'
      - 'gradle/**'
      - 'maven/**'
      - 'npm/**'
      - 'nuget/**'
      - 'ruby/**'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  publish-container:
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9dc751fe249ad99385a2583ee0d084c400eee04e
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Publish to GitHub Packages
        uses: docker/build-push-action@v5
        with:
          context: ./docker
          file: docker/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
  # publish-gradle:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Publish to GitHub Packages
  #       uses: burrunan/gradle-cache-action@v1
  #       with:
  #         arguments: publish
  #         gradle-version: 6.8.3
  #         publish-maven-central: false
  #         publish-sonatype: false
  #         publish-gradle-plugin-portal: false
  #         publish-github-packages: true
  # publish-maven:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Publish to GitHub Packages
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: 'zulu'
  #         java-version: '11'
  #     - name: Publish to GitHub Packages
  #       run: cd maven && mvn deploy -B -DskipTests -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Publish to GitHub Packages
        uses: actions/setup-node@v4
        with:
          registry-url: https://npm.pkg.github.com
      - name: Publish to GitHub Packages
        run: cd npm && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # publish-nuget:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Publish to GitHub Packages
  #       uses: nuget/setup-nuget@v1
  #     - name: Publish to GitHub Packages
  #       run: cd nuget && nuget push *.nupkg -Source https://nuget.pkg.github.com/${{ github.repository_owner }}/${{ github.event.repository.name }} -ApiKey ${{ secrets.GITHUB_TOKEN }}
  # publish-ruby:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Publish to GitHub Packages
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         bundler-cache: true
  #     - name: Publish to GitHub Packages
  #       run: cd ruby && gem build *.gemspec && gem push *.gem --key github --host https://rubygems.pkg.github.com/${{ github.repository_owner }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
